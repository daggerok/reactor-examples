notifications:
  email: false

env:
  global:
  - TERM=dumb
  - secure: e8ZmnHwpalvOYQrtgUo7R5VfCiXg+Vfjg5GlTkoZfrqJ39w5W8qlvkhtJyDYb9yNOkyUew+5UBRve/3IzanVB038IiZpgoCrt8l+WIeGfmMcddX/K9olWxesI0Pi0d/iqGkuHt861oYGLa7Co1Eqb4NLmq0psoKXRG+I60fEdMTbDk4/i3q3iXjDO7EXJ2q+tzfNPBJqSdFRhDmXnU5VVC8AE565dNZzVL69hC2S2WomJ705zFLOcP1rWOq/k8UXzp7bxRiJJQVlNg4gMMylc/UI3eoSRDUOXocOxDtDfvjlxpIjlDMOTWF3xEXtNXjPkzXScQ1OVO9CpbYtjYqV6gVDqak+rN1RI1XoABIir0uQ78OKG1fbtoJOn0AotvzxBuZSPCs/opOZvGbu/BrDEyW1IKUZxScLFbu4CEsPGKUFaBpHwOFi4Y6RZfF9APTMi6IM0OAeZc4gd27Y2T5ZEWJx3DPfvoyVV2i2j0tiz31Y8FqPkgelPhcE85jAVueStkKUbthDBPtW/wutj0ZFT+nbRPdhEusEAhqLw6tUkOCGe4oMzYKFjjj7vqohi4c9dHLcogSebZJjbKLTAJkwUnkx2sQiD7Dg94VscHdNWELuhG1n0mLTsImAFXVSNEVnsshlB4BE3OYJJ16JWOMIpbE4Edy4yx3nS//+UZwckFg=

language: java
jdk: oraclejdk8

service:
- docker

addons:
  apt:
    sources:
    - google-chrome
    packages:
    - google-chrome-stable
    - libappindicator1
    - fonts-liberation
    - bash
    - curl
    - libxml2-utils
    - docker-ce

install: true
before_install:
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
#
- sudo add-apt-repository universe -y >/dev/null
- echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends
  tree jq python-pip curl bash sudo >/dev/null
#
- sudo pip install docker-compose httpie >/dev/null 2>&1
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 8080 3000 80 >/dev/null
#
- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - >/dev/null
- echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends yarn >/dev/null

script:
- export root=$(pwd)
#
- ./mvnw -p ./map-filter-buffer/pom.xml
- java -jar ./map-filter-buffer/target/*-all.jar
#
- ./gradlew -b ./map-filter-buffer/build.gradle
- java -jar ./map-filter-buffer/build/libs/*-all.jar

before_deploy:
- cd ${root}
- ./gradlew documentation
- ./gradlew clean
- ./mvnw -Pdocs
- mkdir -p ./target/generated-docs
- cp -Rf ./target/generated-docs/index.html ./target/generated-docs/404.html

deploy:
  provider: pages
  skip-cleanup: true
  # travis encrypt GITHUB_TOKEN=<your github repo token> --add
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages

before_cache:
- for item in $(find ~/.gradle -name "*.lock");
    do sudo rm -rf $item ;
  done

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker
